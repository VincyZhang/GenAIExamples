# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

{{- $global := .Values }}
{{- range $deployment := .Values.deployments }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deployment.name }}
  namespace: default
spec:
  {{- $replicas := $deployment.replicas }}
  {{- range $podSpec := $global.podSpecs }}
    {{- if eq $podSpec.name $deployment.name }}
      {{- $replicas = $podSpec.replicas | default $deployment.replicas }}
    {{- end }}
  {{- end }}
  replicas: {{ $replicas }}

  selector:
    matchLabels:
      app: {{ $deployment.name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: 'true'
      labels:
        app: {{ $deployment.name }}
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: {{ $global.config.CONFIG_MAP_NAME }}
        {{- if $deployment.args }}
        args:
        {{- range $arg := $deployment.args }}
          {{- if $arg.name }}
          - {{ $arg.name }}
          {{- end }}
          {{- if $arg.value }}
          - "{{ $arg.value }}"
          {{- end }}
        {{- end }}
        {{- end }}

        {{- if $deployment.env }}
        env:
        {{- range $env := $deployment.env }}
          - name: {{ $env.name }}
            value: "{{ $env.value }}"
        {{- end }}
        {{- end }}

        image: {{ $deployment.image }}
        imagePullPolicy: IfNotPresent
        name: {{ $deployment.name }}

        {{- if $deployment.ports }}
        ports:
        {{- range $port := $deployment.ports }}
          {{- range $port_name, $port_id := $port }}
          - {{ $port_name }}: {{ $port_id }}
          {{- end }}
        {{- end }}
        {{- end }}

        {{- $resources := $deployment.resources }}
        {{- range $podSpec := $global.podSpecs }}
          {{- if eq $podSpec.name $deployment.name }}
            {{- if $podSpec.resources }}
              {{- $resources = $podSpec.resources }}
            {{- end }}
          {{- end }}
        {{- end }}

        {{- if $resources }}
        resources:
        {{- range $resourceType, $resource := $resources }}
          {{ $resourceType }}:
          {{- range $limitType, $limit := $resource }}
            {{ $limitType }}: {{ $limit }}
          {{- end }}
        {{- end }}
        {{- end }}

        {{- if $deployment.volumeMounts }}
        volumeMounts:
        {{- range $volumeMount := $deployment.volumeMounts }}
          - mountPath: {{ $volumeMount.mountPath }}
            name: {{ $volumeMount.name }}
        {{- end }}
        {{- end }}

      hostIPC: true
      nodeSelector:
        node-type: {{ $global.config.NODE_SELECTOR }}
      serviceAccountName: default
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: {{ $deployment.name }}
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway


      {{- if $deployment.volumes }}
      volumes:
      {{- range $index, $volume := $deployment.volumes }}
        - name: {{ $volume.name }}
          {{- if $volume.hostPath }}
          hostPath:
            path: {{ $volume.hostPath.path }}
            type: {{ $volume.hostPath.type }}
          {{- else if $volume.emptyDir }}
          emptyDir:
            medium: {{ $volume.emptyDir.medium }}
            sizeLimit: {{ $volume.emptyDir.sizeLimit }}
          {{- end }}
      {{- end }}
      {{- end }}

---
{{- end }}
